digraph "classes" {
rankdir=BT
charset="utf-8"
"dicee.trainer.torch_trainer_ddp.DDPTrainer" [color="black", fontcolor="black", label=<{DDPTrainer|callbacks<br ALIGN="LEFT"/>gpu_id : int<br ALIGN="LEFT"/>loss_func<br ALIGN="LEFT"/>loss_history : list<br ALIGN="LEFT"/>model : DistributedDataParallel<br ALIGN="LEFT"/>num_epochs<br ALIGN="LEFT"/>optimizer : Optimizer<br ALIGN="LEFT"/>train_dataset_loader : DataLoader<br ALIGN="LEFT"/>|extract_input_outputs(z: list)<br ALIGN="LEFT"/>train()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dicee.trainer.dice_trainer.DICE_Trainer" [color="black", fontcolor="black", label=<{DICE_Trainer|args<br ALIGN="LEFT"/>evaluator : NoneType<br ALIGN="LEFT"/>form_of_labelling : NoneType<br ALIGN="LEFT"/>is_continual_training<br ALIGN="LEFT"/>report : dict<br ALIGN="LEFT"/>storage_path<br ALIGN="LEFT"/>trainer : Union[TorchTrainer, TorchDDPTrainer, pl.Trainer], NoneType, Trainer<br ALIGN="LEFT"/>|continual_start()<br ALIGN="LEFT"/>initialize_dataloader(dataset: torch.utils.data.Dataset): torch.utils.data.DataLoader<br ALIGN="LEFT"/>initialize_dataset(dataset, form_of_labelling): torch.utils.data.Dataset<br ALIGN="LEFT"/>initialize_or_load_model()<br ALIGN="LEFT"/>initialize_trainer(callbacks: List, plugins: List): pl.Trainer<br ALIGN="LEFT"/>k_fold_cross_validation(dataset): Tuple[BaseKGE, str]<br ALIGN="LEFT"/>start(dataset): Tuple[BaseKGE, str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dicee.trainer.torch_trainer_ddp.TorchDDPTrainer" [color="black", fontcolor="black", label=<{TorchDDPTrainer|dataset<br ALIGN="LEFT"/>evaluator : NoneType<br ALIGN="LEFT"/>form_of_labelling : str<br ALIGN="LEFT"/>|fit()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dicee.trainer.torch_trainer.TorchTrainer" [color="black", fontcolor="black", label=<{TorchTrainer|dataset<br ALIGN="LEFT"/>device : str<br ALIGN="LEFT"/>evaluator : NoneType<br ALIGN="LEFT"/>form_of_labelling : str<br ALIGN="LEFT"/>is_global_zero : bool<br ALIGN="LEFT"/>loss_function : NoneType<br ALIGN="LEFT"/>model : NoneType<br ALIGN="LEFT"/>optimizer : NoneType<br ALIGN="LEFT"/>process : Process<br ALIGN="LEFT"/>train_dataloaders : NoneType, DataLoader<br ALIGN="LEFT"/>use_closure : bool, NoneType<br ALIGN="LEFT"/>|compute_forward_loss_backward(x_batch: torch.Tensor, y_batch: torch.Tensor): torch.Tensor<br ALIGN="LEFT"/>extract_input_outputs_set_device(batch: list): Tuple<br ALIGN="LEFT"/>fit(): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dicee.trainer.torch_trainer.TorchTrainer" -> "dicee.trainer.dice_trainer.DICE_Trainer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="trainer", style="solid"];
"dicee.trainer.torch_trainer.TorchTrainer" -> "dicee.trainer.dice_trainer.DICE_Trainer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="trainer", style="solid"];
"dicee.trainer.torch_trainer_ddp.TorchDDPTrainer" -> "dicee.trainer.dice_trainer.DICE_Trainer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="trainer", style="solid"];
"dicee.trainer.torch_trainer_ddp.TorchDDPTrainer" -> "dicee.trainer.dice_trainer.DICE_Trainer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="trainer", style="solid"];
}
